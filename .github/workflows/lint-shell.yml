

name: Lint Shell Scripts

on:
  push:
  pull_request:
  workflow_dispatch:
permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install linters
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck shfmt

      # Collecte récursive : *.sh/*.bash, fichiers dans "scripts/", et fichiers sans extension avec shebang bash/sh
      - name: Collect shell files (recursive)
        id: collect
        shell: bash
        run: |
          set -euo pipefail
          EXCLUDES=(-path "./.git/*" -o -path "./.github/*" -o -path "./docs/*" -o -path "./vendor/*" -o -path "./node_modules/*" -o -path "./.venv/*")

          # 1) Candidats par nom/chemin
          mapfile -d '' candidates < <(find . -type f \( -name "*.sh" -o -name "*.bash" -o -path "*/scripts/*" \) ! \( "${EXCLUDES[@]}" \) -print0)

          # 2) + Candidats par shebang (fichiers sans extension)
          while IFS= read -r -d '' f; do
            head -n1 "$f" | grep -Eq '^#!.*/(env )?(ba)?sh' && candidates+=("$f")
          done < <(find . -type f ! -name "*.sh" ! -name "*.bash" ! \( "${EXCLUDES[@]}" \) -print0)

          # Uniques
          readarray -t unique < <(printf '%s\n' "${candidates[@]}" | awk '!a[$0]++')

          # Sauvegarde dans un fichier pour xargs (gestion espaces)
          : > shell_files.txt
          for f in "${unique[@]}"; do
            file "$f" | grep -q "text" && printf '%s\0' "$f" >> shell_files.txt
          done

          COUNT=$(tr -cd '\0' < shell_files.txt | wc -c | tr -d ' ')
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"

      - name: Run shellcheck
        if: steps.collect.outputs.count != '0'
        run: |
          xargs -0 -r shellcheck < shell_files.txt

      - name: Run shfmt (diff mode)
        if: steps.collect.outputs.count != '0'
        run: |
          xargs -0 -r shfmt -d < shell_files.txt

      - name: No shell files found (info)
        if: steps.collect.outputs.count == '0'
        run: echo "No shell files detected – skipping lint."
